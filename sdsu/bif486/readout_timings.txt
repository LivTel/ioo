GENERATE_SERIAL_WAVEFORM
------------------------
Start at PXL_TBL+1 : First word is count of elements in table

save current address in Y:<SXMIT_ADR
Add Y:SXMIT to PXL_TBL
Add FIRST_CLOCKS to PXL_TBL
loop over Y:<NSBIN-1
{
	Add CLOCK_LINE to PXL_TBL
}
Add RESET_VIDEO to PXL_TBL
Add Y:CHARGE_DUMP to PXL_TBL

Calculate length of PXL_TBL and store at position 0

For bin 2
=========

SXMIT: 
        DC       $00F0C0
FIRST_CLOCKS_SPLIT:
 	DC	END_FIRST_CLOCKS_SPLIT-FIRST_CLOCKS_SPLIT-1
	DC	CLK2+SER_DLY+00+00+000+000+H3+000+000
	DC	CLK2+SER_DLY+00+00+000+H2L+H3+H1R+000
	DC	CLK2+SER_DLY+00+00+000+H2L+H3+H1R+000 ; NB identical to above
	DC	CLK2+SER_DLY+00+00+000+H2L+00+H1R+000
	DC	CLK2+SER_DLY+SW+RG+H1L+H2L+00+H1R+H2R
	DC	CLK2+SER_DLY+SW+00+H1L+000+00+000+H2R
	DC	CLK2+SER_DLY+SW+00+H1L+000+00+000+H2R ; NB identical to above
	DC	CLK2+SER_DLY+SW+00+H1L+000+H3+000+H2R
CLOCK_LINE_SPLIT:
 	DC	END_CLOCK_LINE_SPLIT-CLOCK_LINE_SPLIT-1
	DC	CLK2+SER_DLY+SW+00+000+000+H3+000+000
	DC	CLK2+SER_DLY+SW+00+000+H2L+H3+H1R+000
	DC	CLK2+SER_DLY+SW+00+000+H2L+H3+H1R+000 ; NB identical to above
	DC	CLK2+SER_DLY+SW+00+000+H2L+00+H1R+000
	DC	CLK2+SER_DLY+SW+00+H1L+H2L+00+H1R+H2R
	DC	CLK2+SER_DLY+SW+00+H1L+000+00+000+H2R
	DC	CLK2+SER_DLY+SW+00+H1L+000+00+000+H2R ; NB identical to above
	DC	CLK2+SER_DLY+SW+00+H1L+000+H3+000+H2R
RESET_VIDEO
 	DC	END_RESET_VIDEO-RESET_VIDEO-1
	DC	VIDEO+$000000+%0010111		; Stop resetting integrator
INTEGRATE_RESET
	DC	VIDEO+INT_TIM+%0000111		; Integrate
	DC	VIDEO+$000000+%0011011		; Stop Integrate
CHARGE_DUMP_SPLIT:
 	DC	END_CHARGE_DUMP_SPLIT-CHARGE_DUMP_SPLIT-1
	DC	CLK2+SER_DLY+00+00+000+H2L+H3+000+H2R ; Same as end of FIRST_CLOCKS_SPLIT/CLOCK_LINE_SPLIT but SW low
INTEGRATE_SIGNAL_SPLIT ; Copied from E2V231
	DC	VIDEO+INT_TIM+%0001011		; Integrate
	DC	VIDEO+$000000+%0011011		; Stop, A/D is sampling
	DC	VIDEO+$000000+%1110100


SER_DLY:
SER_DLY	EQU	$020000		; Serial delay 2x40ns +40ns instruction  = 80+40 = 120ns
INT_TIM: 
INT_TIM EQU	$060000		; Fast readout 6x40ns +40ns instruction = 240+40 = 280ns

24 clock lines

17 with SER_DLY
2 with INT_TIM
5 with no delay

17x120 = 2040ns
2x280  =  560ns
5x40   =  200ns
       =  2800ns to clock and digitize 1 bin 2x2 pixel

2048x2066x2800/(4x1024x1024x1024) = 2.75s
add parallel clock times

From RDCCD
Clock PARALLEL x NPBIN

PARALLEL_SPLIT
 	DC	END_PARALLEL_SPLIT-PARALLEL_SPLIT-1
	DC	CLK3+P_DLY+00+000+V2L+000+V1U+000+000
	DC	CLK3+P_DLY+00+000+V2L+000+V1U+000+000
	DC	CLK3+P_DLY+TG+000+V2L+V3L+V1U+000+V3U
	DC	CLK3+P_DLY+TG+000+000+V3L+000+000+V3U
	DC	CLK3+P_DLY+TG+V1L+000+V3L+000+V2U+V3U
	DC	CLK3+P_DLY+00+V1L+000+000+000+V2U+000
	DC	CLK3+P_DLY+00+000+000+000+000+000+000

P_DLY	EQU	$F00000		; Parallel clock delay
0xF00000, bit #23 set, bits 16-22 define number of 640ns delay
0x70 is delay
16+32+64 = 112

112x640ns = 71680ns delay for  each line of the waveform
x7 waveforms = 501760ns

There are 2048/2 parallel clocks per readout.
= 490ms delay per readout

= 3.25s for complete 2x2 readout from 4 channels


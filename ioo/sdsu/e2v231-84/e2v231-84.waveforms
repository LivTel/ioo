       COMMENT *
	$Header: /space/home/eng/cjm/cvs/ioo/sdsu/e2v231-84/e2v231-84.waveforms,v 1.16 2016-09-27 11:40:59 cjm Exp $
	Id: 	 $Id: e2v231-84.waveforms,v 1.16 2016-09-27 11:40:59 cjm Exp $
	Version: $Revision: 1.16 $
Waveform tables for CCD231-84. Waveforms based on E2V spec sheet A1A-765136 V1, October 2008.
Waveforms are Mode 1 (low read noise, lower pixel charge capacity).
Assumes usage with an SDSU ARC-22 timing board, ARC-32 clock driver board, and 2 x ARC-45 video boards.
	*

; Definitions of readout variables
VIDEO	 EQU	$000000		; Video processor board switches
CLK2	 EQU	$002000		; Clock driver board lower half
CLK3	 EQU	$003000		; Clock driver board lower half
DC0	 EQU	$000000         ; Video board DC bias supply DAC voltage address 
DC1	 EQU	$100000
CLKV	 EQU	$200000	        ; Clock driver board DAC voltage selection address 
; TDRT_DLY, TOI_DLY, TDTR_DLY, spec = 10us : : 16x640ns (bit 23 set) = 0x900000 = 10240ns
; However this only seems to give a 5us delay on the oscilloscope.
;  20us : 32x640ns (bit 23 set) = 0xA00000 = 20480ns actually gives us 10us wavewforms on the scope
TDRT_DLY EQU	$900000		; spec 10us : 16x640ns (bit 23 set) = 0x900000 = 10240ns
TOI_DLY	 EQU	$900000		; spec 10us : 16x640ns (bit 23 set) = 0x900000 = 10240ns  
TDTR_DLY EQU	$900000		; spec 10us : 16x640ns (bit 23 set) = 0x900000 = 10240ns
; These give the right length waveforms on the scope.
;TDRT_DLY EQU	$A00000		; spec 10us : 32x640ns (bit 23 set) = 0xA00000 = 20480ns
;TOI_DLY	 EQU	$A00000		; spec 10us : 32x640ns (bit 23 set) = 0xA00000 = 20480ns  
;TDTR_DLY EQU	$A00000		; spec 10us : 32x640ns (bit 23 set) = 0xA00000 = 20480ns
TDRG_DLY EQU	$A00000		; spec 20us : 32x640ns (bit 23 set) = 0xA00000 = 20480ns
TDGR_DLY EQU	$A00000		; spec 20us : 32x640ns (bit 23 set) = 0xA00000 = 20480ns
R_DLY	 EQU	$010000		; Serial register transfer delay
;R_DLY	 EQU	$0A0000		; Serial register transfer delay
NSCLR	 EQU	2048		; To clear the serial register
NPCLR	 EQU	2056    	; To clear the parallel register.
SH_DEL	 EQU	100		; Delay in milliseconds between shutter
				;   closing and image readout
PRESCAN EQU	3		; PRESCAN - Needs to be at least 3 due to pixel pipelining, to remove pixel wraparound
PRESKIP EQU	0		; 
NPAR	EQU	1		; Repeat number for SLOW_CLOCKS

INT_TIM	EQU	$0A0000		; Signal integration time for 1 microsec/pixel (440ns delay)

; CCD clock voltages
RG_HI	EQU	 6.0		; Reset Gate High
RG_LO	EQU 	-7.0		; Reset Gate Low
R_HI	EQU	 4.0		; Readout Register Clock High
R_LO	EQU	-6.0		; Readout Register Clock Low 

SW_HI	EQU	 4.0		; Summing Well High
SW_LO	EQU	-6.0		; Summing Well Low
DG_HI	EQU      4.0		; Dump Gate High (See P11, Note 11)
DG_LO	EQU     -7.0		; Dump Gate Low
I_HI	EQU      4.0		; Imaging Area Clocks High
I_LO	EQU     -7.0		; Imaging Area Clocks Low
TG_HI	EQU	 4.0		; Transfer Gate High
TG_LO	EQU     -7.0		; Transfer Gate Low
Vmax	EQU    +13.0		; Maximum clock driver voltage (see ARC-32 clock driver board docs)
ZERO	EQU	 0.0		; Unused pins

; Output video offset parameters
OFFSET	EQU	$800		; 0 TO $FFF -> 12 bits
OFFSET0	EQU	$780   ;   BOTTOM_RIGHT
OFFSET1	EQU	$760   ;   BOTTOM_RIGHT_DUMMY
OFFSET2	EQU	$79C   ;   TOP_RIGHT 
OFFSET3	EQU	$798   ;   TOP_RIGHT_DUMMY

; DC Bias voltages
VOD	EQU	24.0		; Output Drain (from chip operating conditions, spec sheet says 29v)
VRD	EQU	12.0		; Reset Drain
VOG	EQU     -4.0		; Output Gate
VDD	EQU	19.0		; Dump Drain

; Switch state bit definitions for the bottom half of ARC32 clock driver board
RG	EQU	1	; All reset gates 			Pin #1
R1L	EQU	2	; Readout Register Left, Phase 1	Pin #2
R2L	EQU	4	; Readout Register Left, Phase 2	Pin #3
R3L	EQU	8	; Readout Register Left, Phase 3	Pin #4
R1R	EQU	$10	; Readout Register Right, Phase 1	Pin #5
R2R	EQU	$20	; Readout Register Right, Phase 2	Pin #6
R3R	EQU	$40	; Readout Register Right, Phase 3	Pin #7
SWLL	EQU	$80	; Summing well, Lower Left		Pin #8
SWUL	EQU	$100	; Summing well, Upper Left		Pin #9
SWLR	EQU	$200	; Summing well, Lower Right		Pin #10
SWUR	EQU	$400	; Summing well, Upper Right		Pin #11
SW	EQU	SWLL+SWLR+SWUR+SWUL		; All clocked together

; Bit definitions for top half of clock driver board, CLK3
I1L	EQU	1	; Image clock, Lower, Phase 1		Pin #13
I2L	EQU	2	; Image clock, Lower, Phase 2		Pin #14
I3L	EQU	4	; Image clock, Lower, Phase 3		Pin #15
;I4L	EQU	8	; Image clock, Lower, Phase 4		Pin #16  THIS PIN UNRELIABLE?
I4L	EQU	$800	; Image clock, Lower, Phase 4		Pin #37
TGL	EQU	$10	; Transfer Gate Lower			Pin #17

I1U	EQU	$20	; Image clock, Upper, Phase 1		Pin #18
I2U	EQU	$40	; Image clock, Upper, Phase 2		Pin #19
I3U	EQU	$80	; Image clock, Upper, Phase 3		Pin #33
I4U	EQU	$100	; Image clock, Upper, Phase 4		Pin #34
TGU	EQU	$200	; Transfer Gate Upper			Pin #35

DG	EQU	$400	; Dump Gate Lower and Upper		Pin #36

; Not connected: pins #12, #16

; Fast Clocks:	RG+R1L+R2L+R3L+R1R+R2R+R3R+SW
; Slow Clocks:	I1L+I2L+I3L+I4L+TGL+I1U+I2U+I3U+I4U+TGU+DG

;  ***  Definitions for Y: memory waveform tables  *****
;  ****************  Tables for parallel transfer  ****************

; clock names -> spec sheet
; I1L = A1/B1
; I2L = A2/B2
; I3L = A3/B3
; I4L = A4/B4
; I1U = C1/D1
; I2U = C2/D2
; I3U = C3/D3
; I4U = C4/D4
; TGL = TGA
; TGU = TGD

; toi : 10us
; tdrt: 10us
; tdtr: 10us
; tdrg: 20us
; tdgr: 20us

; CLK3 setup:
; full waveform:
; DC	CLK3+DELAY+I1L+I2L+I3L+I4L+TGL+I1U+I2U+I3U+I4U+TGU+DG
; empty waveform:
; DC	CLK3+0000000+000+000+000+000+000+000+000+000+000+000+00

; PARALLEL_UP: ABCD go up towards Register/Amplifier GH, See data sheet, table top of P14
; I1 = C1/D1/A4/B4 = I1U+I4L+TGU
; I2 = C2/D2/A3/B3 = I2U+I3L
; I3 = C3/D3/A2/B2 = I3U+I2L
; I4 = C4/D4/A1/B1 = I4U+I1L
; TGD = TGU = I1; TGA = TGL = low
PARALLEL_UP_START
 	DC	END_PARALLEL_UP_START-PARALLEL_UP_START-1
	DC	CLK2+R_DLY+RG+R1L+R2L+000+R1R+R2R+000+00 ;  setup serial waveforms correctly. R1 and R2 high. SW?
	DC	VIDEO+%0011000		; DC restore and reset integrator
; 0: tdrt: 00+I2+I3+00
	DC	CLK3+TDRT_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
; 1: toi : 00+I2+I3+I4
	DC	CLK3+TOI_DLY+I1L+I2L+I3L+000+000+000+I2U+I3U+I4U+000+00
; 2: toi : 00+00+I3+I4
	DC	CLK3+TOI_DLY+I1L+I2L+000+000+000+000+000+I3U+I4U+000+00
; 3: toi : I1+00+I3+I4
	DC	CLK3+TOI_DLY+I1L+I2L+000+I4L+000+I1U+000+I3U+I4U+TGU+00
; 4: toi : I1+00+00+I4
	DC	CLK3+TOI_DLY+I1L+000+000+I4L+000+I1U+000+000+I4U+TGU+00
; 5: toi : I1+I2+00+I4
	DC	CLK3+TOI_DLY+I1L+000+I3L+I4L+000+I1U+I2U+000+I4U+TGU+00
; 6: toi : I1+I2+00+00
	DC	CLK3+TOI_DLY+000+000+I3L+I4L+000+I1U+I2U+000+000+TGU+00
; 7: toi : I1+I2+I3+00
	DC	CLK3+TOI_DLY+000+I2L+I3L+I4L+000+I1U+I2U+I3U+000+TGU+00
; 8: tdtr: 00+I2+I3+00
	DC	CLK3+TDTR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
END_PARALLEL_UP_START

PARALLEL_UP_BIN
 	DC	END_PARALLEL_UP_BIN-PARALLEL_UP_BIN-1
; 0: tdrt: 00+I2+I3+00
	DC	CLK3+TDRT_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
; 1: toi : 00+I2+I3+I4
	DC	CLK3+TOI_DLY+I1L+I2L+I3L+000+000+000+I2U+I3U+I4U+000+00
; 2: toi : 00+00+I3+I4
	DC	CLK3+TOI_DLY+I1L+I2L+000+000+000+000+000+I3U+I4U+000+00
; 3: toi : I1+00+I3+I4
	DC	CLK3+TOI_DLY+I1L+I2L+000+I4L+000+I1U+000+I3U+I4U+TGU+00
; 4: toi : I1+00+00+I4
	DC	CLK3+TOI_DLY+I1L+000+000+I4L+000+I1U+000+000+I4U+TGU+00
; 5: toi : I1+I2+00+I4
	DC	CLK3+TOI_DLY+I1L+000+I3L+I4L+000+I1U+I2U+000+I4U+TGU+00
; 6: toi : I1+I2+00+00
	DC	CLK3+TOI_DLY+000+000+I3L+I4L+000+I1U+I2U+000+000+TGU+00
; 7: toi : I1+I2+I3+00
	DC	CLK3+TOI_DLY+000+I2L+I3L+I4L+000+I1U+I2U+I3U+000+TGU+00
; 8: tdtr: 00+I2+I3+00
	DC	CLK3+TDTR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
END_PARALLEL_UP_BIN

PARALLEL_UP_END
 	DC	END_PARALLEL_UP_END-PARALLEL_UP_END-1
	; nothing to go here
END_PARALLEL_UP_END

; PARALLEL_DOWN: ABCD go down towards Register/Amplifier EF, See data sheet, table top of P14
; I1 = A1/B1/C4/D4 = I1L+I4U
; I2 = A2/B2/C3/D3 = I2L+I3U
; I3 = A3/B3/C2/D2 = I3L+I2U
; I4 = A4/B4/C1/D1 = I4L+I1U+TGL
; TGD = TGU = low; TGA = TGL = I4
PARALLEL_DOWN_START
 	DC	END_PARALLEL_DOWN_START-PARALLEL_DOWN_START-1
	DC	CLK2+R_DLY+RG+R1L+R2L+000+R1R+R2R+000+00 ;  setup serial waveforms correctly. R1 and R2 high. SW?
	DC	VIDEO+%0011000		; DC restore and reset integrator
; 0: tdrt: 00+I2+I3+00
	DC	CLK3+TDRT_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
; 1: toi : 00+I2+I3+I4
	DC	CLK3+TOI_DLY+000+I2L+I3L+I4L+TGL+I1U+I2U+I3U+000+000+00
; 2: toi : 00+00+I3+I4
	DC	CLK3+TOI_DLY+000+000+I3L+I4L+TGL+I1U+I2U+000+000+000+00
; 3: toi : I1+00+I3+I4
	DC	CLK3+TOI_DLY+I1L+000+I3L+I4L+TGL+I1U+I2U+000+I4U+000+00
; 4: toi : I1+00+00+I4
	DC	CLK3+TOI_DLY+I1L+000+000+I4L+TGL+I1U+000+000+I4U+000+00
; 5: toi : I1+I2+00+I4
	DC	CLK3+TOI_DLY+I1L+I2L+000+I4L+TGL+I1U+000+I3U+I4U+000+00
; 6: toi : I1+I2+00+00
	DC	CLK3+TOI_DLY+I1L+I2L+000+000+000+000+000+I3U+I4U+000+00
; 7: toi : I1+I2+I3+00
	DC	CLK3+TOI_DLY+I1L+I2L+I3L+000+000+000+I2U+I3U+I4U+000+00
; 8: tdtr: 00+I2+I3+00
	DC	CLK3+TDTR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
END_PARALLEL_DOWN_START

PARALLEL_DOWN_BIN
 	DC	END_PARALLEL_DOWN_BIN-PARALLEL_DOWN_BIN-1
; 0: tdrt: 00+I2+I3+00
	DC	CLK3+TDRT_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
; 1: toi : 00+I2+I3+I4
	DC	CLK3+TOI_DLY+000+I2L+I3L+I4L+TGL+I1U+I2U+I3U+000+000+00
; 2: toi : 00+00+I3+I4
	DC	CLK3+TOI_DLY+000+000+I3L+I4L+TGL+I1U+I2U+000+000+000+00
; 3: toi : I1+00+I3+I4
	DC	CLK3+TOI_DLY+I1L+000+I3L+I4L+TGL+I1U+I2U+000+I4U+000+00
; 4: toi : I1+00+00+I4
	DC	CLK3+TOI_DLY+I1L+000+000+I4L+TGL+I1U+000+000+I4U+000+00
; 5: toi : I1+I2+00+I4
	DC	CLK3+TOI_DLY+I1L+I2L+000+I4L+TGL+I1U+000+I3U+I4U+000+00
; 6: toi : I1+I2+00+00
	DC	CLK3+TOI_DLY+I1L+I2L+000+000+000+000+000+I3U+I4U+000+00
; 7: toi : I1+I2+I3+00
	DC	CLK3+TOI_DLY+I1L+I2L+I3L+000+000+000+I2U+I3U+I4U+000+00
; 8: tdtr: 00+I2+I3+00
	DC	CLK3+TDTR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
END_PARALLEL_DOWN_BIN

PARALLEL_DOWN_END
 	DC	END_PARALLEL_DOWN_END-PARALLEL_DOWN_END-1
	; nothing to go here
END_PARALLEL_DOWN_END

; PARALLEL_SPLIT: AB go down to register/amplifier EF, CD go up to register amplifier GH
; I1 = A1/B1/C1/D1 = I1L+I1U+TGU
; I2 = A2/B2/C2/D2 = I2L+I2U
; I3 = A3/B3/C3/D3 = I3L+I3U
; I4 = A4/B4/C4/D4 = I4L+I4U+TGL
; TGD = TGU = I1; TGA = TGL = I4
PARALLEL_SPLIT_START
 	DC	END_PARALLEL_SPLIT_START-PARALLEL_SPLIT_START-1
	DC	CLK2+R_DLY+RG+R1L+R2L+000+R1R+R2R+000+00 ;  setup serial waveforms correctly. R1 and R2 high. SW?
	DC	VIDEO+%0011000		; DC restore and reset integrator
; 0: tdrt: 00+I2+I3+00
	DC	CLK3+TDRT_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
; 1: toi : 00+I2+I3+I4
	DC	CLK3+TOI_DLY+000+I2L+I3L+I4L+TGL+000+I2U+I3U+I4U+000+00
; 2: toi : 00+00+I3+I4
	DC	CLK3+TOI_DLY+000+000+I3L+I4L+TGL+000+000+I3U+I4U+000+00
; 3: toi : I1+00+I3+I4
	DC	CLK3+TOI_DLY+I1L+000+I3L+I4L+TGL+I1U+000+I3U+I4U+TGU+00
; 4: toi : I1+00+00+I4
	DC	CLK3+TOI_DLY+I1L+000+000+I4L+TGL+I1U+000+000+I4U+TGU+00
; 5: toi : I1+I2+00+I4
	DC	CLK3+TOI_DLY+I1L+I2L+000+I4L+TGL+I1U+I2U+000+I4U+TGU+00
; 6: toi : I1+I2+00+00
	DC	CLK3+TOI_DLY+I1L+I2L+000+000+000+I1U+I2U+000+000+TGU+00
; 7: toi : I1+I2+I3+00
	DC	CLK3+TOI_DLY+I1L+I2L+I3L+000+000+I1U+I2U+I3U+000+TGU+00
; 8: tdtr: 00+I2+I3+00
	DC	CLK3+TDTR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
END_PARALLEL_SPLIT_START

; I1 = A1/B1/C1/D1 = I1L+I1U+TGU
; I2 = A2/B2/C2/D2 = I2L+I2U
; I3 = A3/B3/C3/D3 = I3L+I3U
; I4 = A4/B4/C4/D4 = I4L+I4U+TGL
PARALLEL_SPLIT_BIN
 	DC	END_PARALLEL_SPLIT_BIN-PARALLEL_SPLIT_BIN-1
; 0: tdrt: 00+I2+I3+00
	DC	CLK3+TDRT_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
; 1: toi : 00+I2+I3+I4
	DC	CLK3+TOI_DLY+000+I2L+I3L+I4L+TGL+000+I2U+I3U+I4U+000+00
; 2: toi : 00+00+I3+I4
	DC	CLK3+TOI_DLY+000+000+I3L+I4L+TGL+000+000+I3U+I4U+000+00
; 3: toi : I1+00+I3+I4
	DC	CLK3+TOI_DLY+I1L+000+I3L+I4L+TGL+I1U+000+I3U+I4U+TGU+00
; 4: toi : I1+00+00+I4
	DC	CLK3+TOI_DLY+I1L+000+000+I4L+TGL+I1U+000+000+I4U+TGU+00
; 5: toi : I1+I2+00+I4
	DC	CLK3+TOI_DLY+I1L+I2L+000+I4L+TGL+I1U+I2U+000+I4U+TGU+00
; 6: toi : I1+I2+00+00
	DC	CLK3+TOI_DLY+I1L+I2L+000+000+000+I1U+I2U+000+000+TGU+00
; 7: toi : I1+I2+I3+00
	DC	CLK3+TOI_DLY+I1L+I2L+I3L+000+000+I1U+I2U+I3U+000+TGU+00
; 8: tdtr: 00+I2+I3+00
	DC	CLK3+TDTR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
END_PARALLEL_SPLIT_BIN

PARALLEL_SPLIT_END
 	DC	END_PARALLEL_SPLIT_END-PARALLEL_SPLIT_END-1
	; nothing to go here
END_PARALLEL_SPLIT_END

; PARALLEL_CLEAR_UP: ABCD go up towards Register/Amplifier GH, See data sheet, table top of P14
; I1 = C1/D1/A4/B4 = I1U+I4L+TGU
; I2 = C2/D2/A3/B3 = I2U+I3L
; I3 = C3/D3/A2/B2 = I3U+I2L
; I4 = C4/D4/A1/B1 = I4U+I1L
; TGD = TGU = I1; TGA = TGL = low
PARALLEL_CLEAR_UP
	DC	END_PARALLEL_CLEAR_UP-PARALLEL_CLEAR_UP-1
; -: R_DLY   : CLK2 R1+R2+00+00+R
	DC	CLK2+R_DLY+RG+R1L+R2L+000+R1R+R2R+000+00 ;  setup serial waveforms correctly.
	DC	VIDEO+%0011000		; DC restore and reset integrator
; 0: tdrt: 00+I2+I3+00+DG
	DC	CLK3+TDRT_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+DG
; 1: toi : 00+I2+I3+I4+DG
	DC	CLK3+TOI_DLY+I1L+I2L+I3L+000+000+000+I2U+I3U+I4U+000+DG
; 2: toi : 00+00+I3+I4+DG
	DC	CLK3+TOI_DLY+I1L+I2L+000+000+000+000+000+I3U+I4U+000+DG
; 3: toi : I1+00+I3+I4+DG
	DC	CLK3+TOI_DLY+I1L+I2L+000+I4L+000+I1U+000+I3U+I4U+TGU+DG
; 4: toi : I1+00+00+I4+DG
	DC	CLK3+TOI_DLY+I1L+000+000+I4L+000+I1U+000+000+I4U+TGU+DG
; 5: toi : I1+I2+00+I4+DG
	DC	CLK3+TOI_DLY+I1L+000+I3L+I4L+000+I1U+I2U+000+I4U+TGU+DG
; 6: toi : I1+I2+00+00+DG
	DC	CLK3+TOI_DLY+000+000+I3L+I4L+000+I1U+I2U+000+000+TGU+DG
; 7: toi : I1+I2+I3+00+DG
	DC	CLK3+TOI_DLY+000+I2L+I3L+I4L+000+I1U+I2U+I3U+000+TGU+DG
; 8: tdtr: 00+I2+I3+00+DG
	DC	CLK3+TDTR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+DG
; 9: tdrg: CLK3 00+I2+I3+00+DG (no change) / CLK2 00+00+00+00+R (R1 and R2 low)
	DC	CLK2+TDRG_DLY+RG+000+000+000+000+000+000+00
;10: tdgr: 00+I2+I3+00+00 (dump gate off)
	DC	CLK3+TDGR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
END_PARALLEL_CLEAR_UP

; PARALLEL_CLEAR_DOWN: ABCD go down towards Register/Amplifier EF, See data sheet, table top of P14
; I1 = A1/B1/C4/D4 = I1L+I4U
; I2 = A2/B2/C3/D3 = I2L+I3U
; I3 = A3/B3/C2/D2 = I3L+I2U
; I4 = A4/B4/C1/D1 = I4L+I1U+TGL
; TGD = TGU = low; TGA = TGL = I4
PARALLEL_CLEAR_DOWN
 	DC	END_PARALLEL_CLEAR_DOWN-PARALLEL_CLEAR_DOWN-1
; -: R_DLY   : CLK2 R1+R2+00+00+R
	DC	CLK2+R_DLY+RG+R1L+R2L+000+R1R+R2R+000+00 ;  setup serial waveforms correctly. R1 and R2 high. SW?
	DC	VIDEO+%0011000		; DC restore and reset integrator
; 0: tdrt: 00+I2+I3+00+DG
	DC	CLK3+TDRT_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+DG
; 1: toi : 00+I2+I3+I4+DG
	DC	CLK3+TOI_DLY+000+I2L+I3L+I4L+TGL+I1U+I2U+I3U+000+000+DG
; 2: toi : 00+00+I3+I4+DG
	DC	CLK3+TOI_DLY+000+000+I3L+I4L+TGL+I1U+I2U+000+000+000+DG
; 3: toi : I1+00+I3+I4+DG
	DC	CLK3+TOI_DLY+I1L+000+I3L+I4L+TGL+I1U+I2U+000+I4U+000+DG
; 4: toi : I1+00+00+I4+DG
	DC	CLK3+TOI_DLY+I1L+000+000+I4L+TGL+I1U+000+000+I4U+000+DG
; 5: toi : I1+I2+00+I4+DG
	DC	CLK3+TOI_DLY+I1L+I2L+000+I4L+TGL+I1U+000+I3U+I4U+000+DG
; 6: toi : I1+I2+00+00+DG
	DC	CLK3+TOI_DLY+I1L+I2L+000+000+000+000+000+I3U+I4U+000+DG
; 7: toi : I1+I2+I3+00+DG
	DC	CLK3+TOI_DLY+I1L+I2L+I3L+000+000+000+I2U+I3U+I4U+000+DG
; 8: tdtr: 00+I2+I3+00+DG
	DC	CLK3+TDTR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+DG
; 9: tdrg: CLK3 00+I2+I3+00+DG (no change) / CLK2 00+00+00+00+R (R1 and R2 low)
	DC	CLK2+TDRG_DLY+RG+000+000+000+000+000+000+00
;10: tdgr: 00+I2+I3+00+00 (dump gate off)
	DC	CLK3+TDGR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
END_PARALLEL_CLEAR_DOWN

; PARALLEL_CLEAR_SPLIT: AB go down to register/amplifier EF, CD go up to register amplifier GH
; I1 = A1/B1/C1/D1 = I1L+I1U+TGU
; I2 = A2/B2/C2/D2 = I2L+I2U
; I3 = A3/B3/C3/D3 = I3L+I3U
; I4 = A4/B4/C4/D4 = I4L+I4U+TGL
; TGD = TGU = I1; TGA = TGL = I4
PARALLEL_CLEAR_SPLIT
	DC	END_PARALLEL_CLEAR_SPLIT-PARALLEL_CLEAR_SPLIT-1
	DC	CLK2+R_DLY+RG+R1L+R2L+000+R1R+R2R+000+00 ;  setup serial waveforms correctly. R1 and R2 high. SW?
	DC	VIDEO+%0011000		; DC restore and reset integrator
; 0: tdrt: 00+I2+I3+00+DG
	DC	CLK3+TDRT_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+DG
; 1: toi : 00+I2+I3+I4+DG
	DC	CLK3+TOI_DLY+000+I2L+I3L+I4L+TGL+000+I2U+I3U+I4U+000+DG
; 2: toi : 00+00+I3+I4+DG
	DC	CLK3+TOI_DLY+000+000+I3L+I4L+TGL+000+000+I3U+I4U+000+DG
; 3: toi : I1+00+I3+I4+DG
	DC	CLK3+TOI_DLY+I1L+000+I3L+I4L+TGL+I1U+000+I3U+I4U+TGU+DG   
; 4: toi : I1+00+00+I4+DG
	DC	CLK3+TOI_DLY+I1L+000+000+I4L+TGL+I1U+000+000+I4U+TGU+DG
; 5: toi : I1+I2+00+I4+DG
	DC	CLK3+TOI_DLY+I1L+I2L+000+I4L+TGL+I1U+I2U+000+I4U+TGU+DG
; 6: toi : I1+I2+00+00+DG
	DC	CLK3+TOI_DLY+I1L+I2L+000+000+000+I1U+I2U+000+000+TGU+DG  
; 7: toi : I1+I2+I3+00+DG
	DC	CLK3+TOI_DLY+I1L+I2L+I3L+000+000+I1U+I2U+I3U+000+TGU+DG  
; 8: tdtr: 00+I2+I3+00+DG
	DC	CLK3+TDTR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+DG
; 9: tdrg: CLK3 00+I2+I3+00+DG (no change) / CLK2 00+00+00+00+R (R1 and R2 low)
	DC	CLK2+TDRG_DLY+RG+000+000+000+000+000+000+00
;10: tdgr: 00+I2+I3+00+00 (dump gate off)
	DC	CLK3+TDGR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00
END_PARALLEL_CLEAR_SPLIT

;  ****************  Tables for serial transfer  ****************
;    xfer, A/D, integ, Pol+, Pol-, DCclamp, rst  (1 => switch open)

; BOTH: Each Register moves towards it's own amplifier 
; R1 = E2/F2/G2/H2 = R2L+R2R
; R2 = E1/F1/G1/H1 = R1L+R1R
; R3 = E3/F3/G3/H3 = R3L+R3R
SERIAL_IDLE
 	DC	END_SERIAL_IDLE-SERIAL_IDLE-1
	DC	CLK2+R_DLY+RG+R1L+000+000+R1R+000+000+SW
	DC	CLK2+R_DLY+00+R1L+000+000+R1R+000+000+SW
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; Sample reset level
	DC	VIDEO+$000000+%0010111		; Stop resetting integrator
	DC	VIDEO+INT_TIM+%0000111		; Integrate
	DC	VIDEO+$000000+%0011011		; Stop Integrate
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+00
; sample signal level
	DC	VIDEO+INT_TIM+%0001011		; Integrate
	DC	VIDEO+$000000+%0011011		; Stop, A/D is sampling
	DC	VIDEO+%1110100			; Start A/D conversion
	DC	CLK2+R_DLY+00+000+R2L+000+000+R2R+000+00
END_SERIAL_IDLE

; LEFT: Register EF moves towards E, Register GH moves towards H
; R1 = E2/F1/G1/H2 = R2L+R1R
; R2 = E1/F2/G2/H1 = R1L+R2R
; R3 = E3/F3/G3/H3 = R3L+R3R
SERIAL_SKIP_LEFT	; Serial clocking waveform for skipping left
	DC	END_SERIAL_SKIP_LEFT-SERIAL_SKIP_LEFT-1
; 2: R_DLY   : 00+R2+00+00+0
	DC	CLK2+R_DLY+00+R1L+000+000+000+R2R+000+SW
; 3: R_DLY   : 00+R2+00+00+R  Should be twxmtdx delay (30ns) but executing waveform takes 40ns
	DC	CLK2+R_DLY+RG+R1L+000+000+000+R2R+000+00
; 4: R_DLY   : 00+00+R3+SW+R  Should be tdx delay (20ns) but executing waveform takes 40ns
	DC	CLK2+R_DLY+RG+000+000+R3L+000+000+R3R+SW
; 5: R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; 6: R_DLY   : R1+00+00+00+0
	DC	CLK2+R_DLY+00+000+R2L+000+R1R+000+000+00
END_SERIAL_SKIP_LEFT

; Copied from FIRST_CLOCKS_RIGHT / CHARGE_DUMP_RIGHT
SERIAL_SKIP_RIGHT	; Serial clocking waveform for skipping right
	DC	END_SERIAL_SKIP_RIGHT-SERIAL_SKIP_RIGHT-1
; 2: R_DLY   : 00+R2+00+00+0
	DC	CLK2+R_DLY+00+000+R2L+000+R1R+000+000+SW
; 3: R_DLY   : 00+R2+00+00+R  Should be twxmtdx delay (30ns) but executing waveform takes 40ns
	DC	CLK2+R_DLY+RG+000+R2L+000+R1R+000+000+SW
; 4: R_DLY   : 00+00+R3+SW+R  Should be tdx delay (20ns) but executing waveform takes 40ns
	DC	CLK2+R_DLY+RG+000+000+R3L+000+000+R3R+SW
; 5: R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; 6: R_DLY   : R1+00+00+00+0
	DC	CLK2+R_DLY+00+R1L+000+000+000+R2R+000+00
END_SERIAL_SKIP_RIGHT

; Copied from FIRST_CLOCKS_SPLIT / CHARGE_DUMP_SPLIT
SERIAL_SKIP_SPLIT	; Serial clocking waveform for skipping both ends
	DC	END_SERIAL_SKIP_SPLIT-SERIAL_SKIP_SPLIT-1
; 2: R_DLY   : 00+R2+00+00+0
	DC	CLK2+R_DLY+00+R1L+000+000+R1R+000+000+SW
; 3: R_DLY   : 00+R2+00+00+R  Should be twxmtdx delay (30ns) but executing waveform takes 40ns
	DC	CLK2+R_DLY+RG+R1L+000+000+R1R+000+000+SW
; 4: R_DLY   : 00+00+R3+SW+R  Should be tdx delay (20ns) but executing waveform takes 40ns
	DC	CLK2+R_DLY+RG+000+000+R3L+000+000+R3R+SW
; 5: R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; 6: R_DLY   : R1+00+00+00+0
	DC	CLK2+R_DLY+00+000+R2L+000+000+R2R+000+00
END_SERIAL_SKIP_SPLIT

SERIALS_EXPOSE
	DC	END_SERIALS_EXPOSE-SERIALS_EXPOSE-1
	DC	CLK3+TDGR_DLY+000+I2L+I3L+000+000+000+I2U+I3U+000+000+00 ; IAS 
	DC	CLK2+R_DLY+RG+R1L+R2L+000+R1R+R2R+000+00 ;  setup serial waveforms correctly. R1 and R2 high. SW?
END_SERIALS_EXPOSE

; same as SERIAL_SKIP_SPLIT
SERIAL_CLEAR		; Serial clocking waveform for clearing both ends
	DC	END_SERIAL_CLEAR-SERIAL_CLEAR-1
; 2: R_DLY   : 00+R2+00+00+0
	DC	CLK2+R_DLY+00+R1L+000+000+R1R+000+000+SW
; 3: R_DLY   : 00+R2+00+00+R  Should be twxmtdx delay (30ns) but executing waveform takes 40ns
	DC	CLK2+R_DLY+RG+R1L+000+000+R1R+000+000+SW
; 4: R_DLY   : 00+00+R3+SW+R  Should be tdx delay (20ns) but executing waveform takes 40ns
	DC	CLK2+R_DLY+RG+000+000+R3L+000+000+R3R+SW
; 5: R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; 6: R_DLY   : R1+00+00+00+0
	DC	CLK2+R_DLY+00+000+R2L+000+000+R2R+000+00
END_SERIAL_CLEAR

RESET_VIDEO
 	DC	END_RESET_VIDEO-RESET_VIDEO-1
	DC	VIDEO+$000000+%0010111		; Stop resetting integrator
INTEGRATE_RESET
	DC	VIDEO+INT_TIM+%0000111		; Integrate
	DC	VIDEO+$000000+%0011011		; Stop Integrate
END_RESET_VIDEO

; ************ Waveform generating code for the LEFT ****************
; clock names -> spec sheet
; R1L = E1/H1
; R2L = E2/H2
; R3L = E3/H3
; R1R = F1/G1
; R2R = F2/G2
; R3R = F3/G3

; delays
; tdx: 20ns
; twx: 50ns
; twxmtdx: 30ns (twx minus tdx)

; serial waveforms
; full:
;	DC	CLK2+R_DLY+RG+R1L+R2L+R3L+R1R+R2R+R3R+SW
; empty
;	DC	CLK2+00000+00+000+000+000+000+000+000+00

; Serial readout sequence from spec sheet:
; NO LONGER USED
; 0: R_DLY   : 00+00+R3+SW+0
; 1: R_DLY   : R1+00+00+00+0
; 2: R_DLY   : 00+R2+00+00+0
; 3: R_DLY   : 00+R2+00+00+R  Should be twxmtdx delay (30ns) but executing waveform takes 40ns
; 4: R_DLY   : 00+00+R3+SW+R  Should be tdx delay (20ns) but executing waveform takes 40ns
; 5: R_DLY   : 00+00+R3+SW+0
; Sample reset level
; 6: R_DLY   : R1+00+00+00+0
; sample signal level

; Latest readout sequence:
; First clocks
; R_DLY   : 00+R2+00+SW+R
; R_DLY   : 00+R2+00+SW+0
; R_DLY   : 00+00+R3+SW+0
; R_DLY   : 00+00+R3+SW+0
; Clock line
; R_DLY   : R1+00+00+SW+0
; R_DLY   : 00+R2+00+SW+0
; R_DLY   : 00+00+R3+SW+0
; R_DLY   : 00+00+R3+SW+0
; Sample reset level
; Charge dump
; R_DLY   : R1+00+00+00+0
; Integrate signal


; LEFT: Register EF moves towards E, Register GH moves towards H
; R1 = E2/F1/G1/H2 = R2L+R1R
; R2 = E1/F2/G2/H1 = R1L+R2R
; R3 = E3/F3/G3/H3 = R3L+R3R
; SW held high until last bin, then clocked as R3
FIRST_CLOCKS_LEFT
 	DC	END_FIRST_CLOCKS_LEFT-FIRST_CLOCKS_LEFT-1
; R_DLY   : 00+R2+00+SW+R
	DC	CLK2+R_DLY+RG+R1L+000+000+000+R2R+000+SW
; R_DLY   : 00+R2+00+SW+0
	DC	CLK2+R_DLY+00+R1L+000+000+000+R2R+000+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; Next: Sample reset level
END_FIRST_CLOCKS_LEFT

CLOCK_LINE_LEFT
	DC	END_CLOCK_LINE_LEFT-CLOCK_LINE_LEFT-1
; R_DLY   : R1+00+00+SW+0
	DC	CLK2+R_DLY+00+000+R2L+000+R1R+000+000+SW
; R_DLY   : 00+R2+00+SW+0
	DC	CLK2+R_DLY+00+R1L+000+000+000+R2R+000+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; Next: Sample reset level
END_CLOCK_LINE_LEFT

CHARGE_DUMP_LEFT
 	DC	END_CHARGE_DUMP_LEFT-CHARGE_DUMP_LEFT-1
; R_DLY   : R1+00+00+00+0
	DC	CLK2+R_DLY+00+000+R2L+000+R1R+000+000+00
INTEGRATE_SIGNAL_LEFT
	DC	VIDEO+INT_TIM+%0001011		; Integrate
	DC	VIDEO+$000000+%0011011		; Stop, A/D is sampling
	DC	VIDEO+%1110100	
END_CHARGE_DUMP_LEFT

; **************  Waveform generating code for the RIGHT  **********
; RIGHT: Register EF moves towards F, Register GH moves towards G
; R1 = E1/F2/G2/H1 = R1L+R2R
; R2 = E2/F1/G1/H2 = R2L+R1R
; R3 = E3/F3/G3/H3 = R3L+R3R
FIRST_CLOCKS_RIGHT
 	DC	END_FIRST_CLOCKS_RIGHT-FIRST_CLOCKS_RIGHT-1
; R_DLY   : 00+R2+00+SW+R
	DC	CLK2+R_DLY+RG+000+R2L+000+R1R+000+000+SW
; R_DLY   : 00+R2+00+SW+0
	DC	CLK2+R_DLY+00+000+R2L+000+R1R+000+000+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; Next: Sample reset level
END_FIRST_CLOCKS_RIGHT

CLOCK_LINE_RIGHT
 	DC	END_CLOCK_LINE_RIGHT-CLOCK_LINE_RIGHT-1
; R_DLY   : R1+00+00+SW+0
	DC	CLK2+R_DLY+00+R1L+000+000+000+R2R+000+SW
; R_DLY   : 00+R2+00+SW+0
	DC	CLK2+R_DLY+00+000+R2L+000+R1R+000+000+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; Next: Sample reset level
END_CLOCK_LINE_RIGHT

CHARGE_DUMP_RIGHT
 	DC	END_CHARGE_DUMP_RIGHT-CHARGE_DUMP_RIGHT-1
; R_DLY   : R1+00+00+00+0
	DC	CLK2+R_DLY+00+R1L+000+000+000+R2R+000+00
; sample signal level
INTEGRATE_SIGNAL_RIGHT
	DC	VIDEO+INT_TIM+%0001011		; Integrate
	DC	VIDEO+$000000+%0011011		; Stop, A/D is sampling
	DC	VIDEO+%1110100	
END_CHARGE_DUMP_RIGHT

; **************  Waveform generating code for SPLIT = Both  **********
; BOTH: Each Register moves towards it's own amplifier 
; R1 = E2/F2/G2/H2 = R2L+R2R
; R2 = E1/F1/G1/H1 = R1L+R1R
; R3 = E3/F3/G3/H3 = R3L+R3R
FIRST_CLOCKS_SPLIT
 	DC	END_FIRST_CLOCKS_SPLIT-FIRST_CLOCKS_SPLIT-1
; R_DLY   : 00+R2+00+SW+R
	DC	CLK2+R_DLY+RG+R1L+000+000+R1R+000+000+SW
; R_DLY   : 00+R2+00+SW+0
	DC	CLK2+R_DLY+00+R1L+000+000+R1R+000+000+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; Next: Sample reset level
END_FIRST_CLOCKS_SPLIT

CLOCK_LINE_SPLIT
 	DC	END_CLOCK_LINE_SPLIT-CLOCK_LINE_SPLIT-1
; R_DLY   : R1+00+00+SW+0
	DC	CLK2+R_DLY+00+000+R2L+000+000+R2R+000+SW
; R_DLY   : 00+R2+00+SW+0
	DC	CLK2+R_DLY+00+R1L+000+000+R1R+000+000+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; R_DLY   : 00+00+R3+SW+0
	DC	CLK2+R_DLY+00+000+000+R3L+000+000+R3R+SW
; Next: Sample reset level
END_CLOCK_LINE_SPLIT

CHARGE_DUMP_SPLIT
 	DC	END_CHARGE_DUMP_SPLIT-CHARGE_DUMP_SPLIT-1
; R_DLY   : R1+00+00+00+0
	DC	CLK2+R_DLY+00+000+R2L+000+000+R2R+000+00
; sample signal level
INTEGRATE_SIGNAL_SPLIT
	DC	VIDEO+INT_TIM+%0001011		; Integrate
	DC	VIDEO+$000000+%0011011		; Stop, A/D is sampling
	DC	VIDEO+%1110100	
END_CHARGE_DUMP_SPLIT

; Initialization of clock driver and video processor DACs and switches
DACS	DC	END_DACS-DACS-1
	DC	CLKV+$0A0080					; DAC = unbuffered mode
; ARC-32
	DC	CLKV+$000100+@CVI((RG_HI+Vmax)/(2*Vmax)*255)	; Pin #1, Reset Gate
	DC	CLKV+$000200+@CVI((RG_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$000400+@CVI((R_HI+Vmax)/(2*Vmax)*255)	; Pin #2, R1 Left
	DC	CLKV+$000800+@CVI((R_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$002000+@CVI((R_HI+Vmax)/(2*Vmax)*255)	; Pin #3, R2 Left
	DC	CLKV+$004000+@CVI((R_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$008000+@CVI((R_HI+Vmax)/(2*Vmax)*255)	; Pin #4, R3 Left
	DC	CLKV+$010000+@CVI((R_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$020100+@CVI((R_HI+Vmax)/(2*Vmax)*255)	; Pin #5, R1 Right
	DC	CLKV+$020200+@CVI((R_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$020400+@CVI((R_HI+Vmax)/(2*Vmax)*255)	; Pin #6, R2 Right
	DC	CLKV+$020800+@CVI((R_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$022000+@CVI((R_HI+Vmax)/(2*Vmax)*255)	; Pin #7, R3 Right
	DC	CLKV+$024000+@CVI((R_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$028000+@CVI((SW_HI+Vmax)/(2*Vmax)*255)	; Pin #8, Summing Well Lower Left
	DC	CLKV+$030000+@CVI((SW_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$040100+@CVI((SW_HI+Vmax)/(2*Vmax)*255)	; Pin #9, Summing Well Upper Left
	DC	CLKV+$040200+@CVI((SW_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$040400+@CVI((SW_HI+Vmax)/(2*Vmax)*255)	; Pin #10, Summing Well Lower Right
	DC	CLKV+$040800+@CVI((SW_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$042000+@CVI((SW_HI+Vmax)/(2*Vmax)*255)	; Pin #11, Summing Well Upper Right
	DC	CLKV+$044000+@CVI((SW_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$048000+@CVI((ZERO+Vmax)/(2*Vmax)*255)	; Pin #12, Unused
	DC	CLKV+$050000+@CVI((ZERO+Vmax)/(2*Vmax)*255)

; Define all the parallel clock voltages
	DC	CLKV+$060100+@CVI((I_HI+Vmax)/(2*Vmax)*255)	; Pin #13, I1 Lower
	DC	CLKV+$060200+@CVI((I_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$060400+@CVI((I_HI+Vmax)/(2*Vmax)*255)	; Pin #14, I2 Lower
	DC	CLKV+$060800+@CVI((I_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$062000+@CVI((I_HI+Vmax)/(2*Vmax)*255)	; Pin #15, I3 Lower
	DC	CLKV+$064000+@CVI((I_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$068000+@CVI((I_HI+Vmax)/(2*Vmax)*255)	; Pin #16, I4 Lower (OLD)
	DC	CLKV+$070000+@CVI((I_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$080100+@CVI((TG_HI+Vmax)/(2*Vmax)*255)	; Pin #17, Transfer Gate Lower
	DC	CLKV+$080200+@CVI((TG_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$080400+@CVI((I_HI+Vmax)/(2*Vmax)*255)	; Pin #18, I1 Upper
	DC	CLKV+$080800+@CVI((I_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$082000+@CVI((I_HI+Vmax)/(2*Vmax)*255)	; Pin #19, I2 Upper
	DC	CLKV+$084000+@CVI((I_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$088000+@CVI((I_HI+Vmax)/(2*Vmax)*255)	; Pin #33, I3 Upper
	DC	CLKV+$090000+@CVI((I_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$0A0100+@CVI((I_HI+Vmax)/(2*Vmax)*255)	; Pin #34, I4 Upper
	DC	CLKV+$0A0200+@CVI((I_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$0A0400+@CVI((TG_HI+Vmax)/(2*Vmax)*255)	; Pin #35, Transfer Gate Upper
	DC	CLKV+$0A0800+@CVI((TG_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$0A2000+@CVI((DG_HI+Vmax)/(2*Vmax)*255)	; Pin #36, Dump Gates
	DC	CLKV+$0A4000+@CVI((DG_LO+Vmax)/(2*Vmax)*255)
	DC	CLKV+$0A8000+@CVI((I_HI+Vmax)/(2*Vmax)*255)	; Pin #37, I4 Lower  (NEW)
	DC	CLKV+$0B0000+@CVI((I_LO+Vmax)/(2*Vmax)*255)


;  ******************  Code for 2 x ARC-45  ****************************

; Set gain and integrator speed. (77, bb, dd, ee; low gain to high gain)
;	DC	$0c3c77			; Gain x1, slow integrate, board #0
;	DC	$0c3f77			; Gain x1, fast integ speed, board #0
;	DC	$0c3fbb			; Gain x2, fast integ speed, board #0
;	DC	$0c3fdd			; Gain x4.75, fast integ speed, board #0
;	DC	$0c3fee			; Gain x9.50, fast integ speed, board #0
;	DC	$1c3fbb			; Gain x2, fast integ speed, board #1

	DC	DC0+$0c3fbb		; x2 fast
	DC	DC1+$0c3fbb


; Output offset voltages
	DC	DC0+$0c8000+OFFSET0 	; Output video offset, ch. OS-F
	DC	DC0+$0cc000+OFFSET1	; Output video offset, ch. DOS-F
	DC	DC1+$0c8000+OFFSET2 	; Output video offset, ch. OS-G	
	DC	DC1+$0cc000+OFFSET3	; Output video offset, ch. DOS-G

; Output and reset drain DC bias voltages
	DC	DC0+$0d0000+@CVI((VOD-7.50)/22.5*4095)	; VOD-LL pin #1 board #0, ARC-45 #0, DB25 pin #1
	DC	DC0+$0d4000+@CVI((VOD-7.50)/22.5*4095)	; VOD-LR pin #2 board #0, ARC-45 #0, DB25 pin #2
	DC	DC0+$0c0000+@CVI((VRD-5.00)/15.0*4095)	; VRD-LL pin #3 board #0, ARC-45 #0, DB25 pin #3
	DC	DC0+$0c4000+@CVI((VRD-5.00)/15.0*4095)	; VRD-LR pin #4 board #0, ARC-45 #0, DB25 pin #4
	DC	DC0+$0d8000+@CVI((VDD-7.50)/22.5*4095)	; Vdd-L Dump Drain pin #5 board #0

	DC	DC1+$0d0000+@CVI((VOD-7.50)/22.5*4095)	; VOD-UR pin #1 board #1, ARC-45 #1, DB25 pin #1
	DC	DC1+$0d4000+@CVI((VOD-7.50)/22.5*4095)	; VOD-UL pin #2 board #1, ARC-45 #1, DB25 pin #2
	DC	DC1+$0c0000+@CVI((VRD-5.00)/15.0*4095)	; VRD-UR pin #3 board #1, ARC-45 #1, DB25 pin #3
	DC	DC1+$0c4000+@CVI((VRD-5.00)/15.0*4095)	; VRD-UL pin #4 board #1, ARC-45 #1, DB25 pin #4
	DC	DC1+$0d8000+@CVI((VDD-7.50)/22.5*4095)	; Vdd-U Dump Drain pin #5 board #1

; Output gate, anti-blooming gate and substrate voltages
	DC	DC0+$0e0000+@CVI((VOG+10.0)/20.0*4095)	; VOG-LL pin # 9 board #0, ARC-45 #0, DB25 pin #9
	DC	DC0+$0e4000+@CVI((VOG+10.0)/20.0*4095)	; VOG-LR pin #10 board #0, ARC-45 #0, DB25 pin #10
	DC	DC1+$0e0000+@CVI((VOG+10.0)/20.0*4095)	; VOG-UR pin # 9 board #1, ARC-45 #1, DB25 pin #9
	DC	DC1+$0e4000+@CVI((VOG+10.0)/20.0*4095)	; VOG-UL pin #10 board #1, ARC-45 #1, DB25 pin #10

END_DACS

;
; $Log: not supported by cvs2svn $
; Revision 1.15  2014/01/27 16:26:49  cjm
; Added alternate delays so they match the spec sheet (i.e. 10us). Although parallel delays are configured to be 10us, on the oscilloscope they are only 5us. Sticking with the wrong 5us ones for now, the 10us are commented out.
; IAS retuned the offsets to the right hand amps and dummies have similar bias levels.
; IAS raised the following clock voltages by 1v: RG_HI, R_HI, SW_HI, DG_HI, I_HI, TG_HI. This to reduce/stop smearing from the TOP_RIGHT amplifier.
;
; Revision 1.13  2014/01/16 15:14:02  cjm
; Changed comments to reflect wiring loom changes.
; Only outputs F+G connected plus their associated dummy outputs.
;
; Revision 1.12  2013/04/18 16:23:24  cjm
; Changes to OFFSET voltages.
;
; Revision 1.10  2013/01/31 11:34:43  cjm
; IAS reduced signal integration time INT_TIM from $140000 to $0A0000.
;
; Revision 1.9  2012/10/16 10:11:09  cjm
; Changes to R_DLY and clock voltages as a result of IASs
; on-site work Sept 2012.
;
; Revision 1.8  2012/07/17 17:31:51  cjm
; Re-Commented SERIAL_SPLIT waveforms after modifications.
; SERIAL_LEFT and SERIAL_RIGHT waveforms changed in the same way as SPLIT is done.
;
; Revision 1.7  2012/06/19 15:01:57  cjm
; Fixed SERIAL_IDLE 'Stop resetting integrator' delay.
;
; Revision 1.6  2012/06/19 14:17:53  cjm
; Also OFFSET now set to $800 from $500.
;
; Revision 1.5  2012/06/19 10:41:04  cjm
; Changes to reduce readnoise to ~5 electrons:
; R_DLY increased to slow serial transfer.
; INT_TIM increased to slow dual slope integrator down.
; SERIAL_IDLE reset gate clocking changed.
; Delay added whn stopping integrator reset to allow settle.
; SERIALS_EXPOSE now sets parallel clocks correctly.
; Reset gate clocking changed in FIRST_CLOCKS_SPLIT/CLOCK_LINE_SPLIT.
;
; Revision 1.4  2012/05/29 14:25:13  cjm
; Changes made by IAS on site.
; I4L moved from pin 16 to pin 37, as pin 16 caused signal problems.
; Phases 0 and 1 commented out from all serial waveforms, as they are duplicates
; in the spec sheet (i.e. phase 1 is also phase 6).
; Offset tuned.
; Pin 37 voltages set up.
;
; Revision 1.3  2012/05/22 15:31:11  cjm
; Fixed VRD board 0 settings in DACS.
; Commented out spurious Gain setting examples.
;
; Revision 1.2  2012/05/21 09:20:54  cjm
; Added some missing SW.
;
; Revision 1.1  2012/04/23 14:45:27  cjm
; Initial revision
;
;
